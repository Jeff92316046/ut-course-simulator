"""initial database schema creation with core tables

Revision ID: 0ca64c67fac3
Revises:
Create Date: 2025-06-22 20:23:25.574141

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "0ca64c67fac3"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "courses",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column(
            "academic_year_semester", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("course_code", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("class_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("college", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("credit", sa.Integer(), nullable=False),
        sa.Column("classroom", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("field", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("campus_area", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "course_type",
            sa.Enum("REQUIRED", "ELECTIVE", name="coursetypeenum"),
            nullable=False,
        ),
        sa.Column("is_stop_opened", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "academic_year_semester",
            "course_code",
            "class_name",
            "college",
            "name",
            name="uix_course_identity",
        ),
    )
    op.create_index(
        op.f("ix_courses_academic_year_semester"),
        "courses",
        ["academic_year_semester"],
        unique=False,
    )
    op.create_index(
        op.f("ix_courses_class_name"), "courses", ["class_name"], unique=False
    )
    op.create_index(op.f("ix_courses_college"), "courses", ["college"], unique=False)
    op.create_index(
        op.f("ix_courses_course_code"), "courses", ["course_code"], unique=False
    )
    op.create_index(op.f("ix_courses_field"), "courses", ["field"], unique=False)
    op.create_index(op.f("ix_courses_id"), "courses", ["id"], unique=False)
    op.create_index(op.f("ix_courses_name"), "courses", ["name"], unique=False)
    op.create_table(
        "teachers",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_teachers_id"), "teachers", ["id"], unique=False)
    op.create_index(op.f("ix_teachers_name"), "teachers", ["name"], unique=True)
    op.create_table(
        "users",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "hashed_password", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "course_schedules",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("course_id", sa.Uuid(), nullable=False),
        sa.Column("day_of_week", sa.Integer(), nullable=True),
        sa.Column("start_period", sa.Integer(), nullable=True),
        sa.Column("end_period", sa.Integer(), nullable=True),
        sa.Column(
            "week_pattern",
            sa.Enum("EVERY_WEEK", "ODD_WEEKS", "EVEN_WEEKS", name="weekpatternenum"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["course_id"],
            ["courses.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_course_schedules_id"), "course_schedules", ["id"], unique=False
    )
    op.create_table(
        "course_tables",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column(
            "academic_year_semester", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_course_tables_academic_year_semester"),
        "course_tables",
        ["academic_year_semester"],
        unique=False,
    )
    op.create_index(op.f("ix_course_tables_id"), "course_tables", ["id"], unique=False)
    op.create_table(
        "course_teachers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("course_id", sa.Uuid(), nullable=False),
        sa.Column("teacher_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["course_id"],
            ["courses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["teacher_id"],
            ["teachers.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "refresh_tokens",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("hashed_token", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("user_agent", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("ip_address", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("expires_at", sa.DateTime(), nullable=False),
        sa.Column("last_used_at", sa.DateTime(), nullable=True),
        sa.Column("revoked", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_refresh_tokens_hashed_token"),
        "refresh_tokens",
        ["hashed_token"],
        unique=False,
    )
    op.create_index(
        op.f("ix_refresh_tokens_id"), "refresh_tokens", ["id"], unique=False
    )
    op.create_table(
        "user_courses",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("course_table_id", sa.Uuid(), nullable=False),
        sa.Column("course_id", sa.Uuid(), nullable=False),
        sa.Column("enrollment_date", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["course_id"],
            ["courses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["course_table_id"],
            ["course_tables.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_courses")
    op.drop_index(op.f("ix_refresh_tokens_id"), table_name="refresh_tokens")
    op.drop_index(op.f("ix_refresh_tokens_hashed_token"), table_name="refresh_tokens")
    op.drop_table("refresh_tokens")
    op.drop_table("course_teachers")
    op.drop_index(op.f("ix_course_tables_id"), table_name="course_tables")
    op.drop_index(
        op.f("ix_course_tables_academic_year_semester"), table_name="course_tables"
    )
    op.drop_table("course_tables")
    op.drop_index(op.f("ix_course_schedules_id"), table_name="course_schedules")
    op.drop_table("course_schedules")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_teachers_name"), table_name="teachers")
    op.drop_index(op.f("ix_teachers_id"), table_name="teachers")
    op.drop_table("teachers")
    op.drop_index(op.f("ix_courses_name"), table_name="courses")
    op.drop_index(op.f("ix_courses_id"), table_name="courses")
    op.drop_index(op.f("ix_courses_field"), table_name="courses")
    op.drop_index(op.f("ix_courses_course_code"), table_name="courses")
    op.drop_index(op.f("ix_courses_college"), table_name="courses")
    op.drop_index(op.f("ix_courses_class_name"), table_name="courses")
    op.drop_index(op.f("ix_courses_academic_year_semester"), table_name="courses")
    op.drop_table("courses")
    # ### end Alembic commands ###
